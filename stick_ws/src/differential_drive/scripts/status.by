#!/usr/bin/env python
from subprocess import call
import rospy
import actionlib
from actionlib_msgs.msg import GoalStatusArray
from geometry_msgs.msg import Twist
first_time=False
second_time=False
def callback(data):
    global first_time
    global second_time
    if (first_time==False):
        call(["aplay","Desktop/hi.wav"])#welcome talk
        first_time=True
    if not data.status_list:
        print("list is empty")
    elif(data.status_list[0].status == 1) and (second_time==False):
        call(["aplay","Desktop/goal.wav"]) #goal accepted
        second_time==True
    #rospy.loginfo(rospy.get_caller_id() + "I heard %d", data.status_list[0].status)
    

def vel_callback(vel_msg):
    if(vel_msg.angular.z >= 1):
        call(["aplay","Desktop/turn_right.wav"])#choose the right one
    if(vel_msg.angular.z <= -1):
        call(["aplay","Desktop/turn_left.wav"])#choose the right one


def listener():

    # In ROS, nodes are uniquely named. If two nodes with the same
    # name are launched, the previous one is kicked off. The
    # anonymous=True flag means that rospy will choose a unique
    # name for our 'listener' node so that multiple listeners can
    # run simultaneously.
    rospy.init_node('listener', anonymous=True)

    rospy.Subscriber("move_base/status", GoalStatusArray, callback)
    
    rospy.Subscriber("cmd_vel",Twist,vel_callback)
    # spin() simply keeps python from exiting until this node is stopped
    rospy.spin()

if __name__ == '__main__':
    listener()

